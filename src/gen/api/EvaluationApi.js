/**
 * Gest-ES Api
 * This api provides communication with a database for a TB project
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: claude-andre.inacioalves@heig-vd.ch
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ApiMessageDTO from '../model/ApiMessageDTO';
import MarkDTO from '../model/MarkDTO';
import TestDTO from '../model/TestDTO';

/**
* Evaluation service.
* @module api/EvaluationApi
* @version 1.0.0
*/
export default class EvaluationApi {

    /**
    * Constructs a new EvaluationApi. 
    * @alias module:api/EvaluationApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the createTest operation.
     * @callback module:api/EvaluationApi~createTestCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ApiMessageDTO} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * create test
     * This endpoint is used to create a test
     * @param {Object} opts Optional parameters
     * @param {module:model/TestDTO} opts.testDTO 
     * @param {module:api/EvaluationApi~createTestCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ApiMessageDTO}
     */
    createTest(opts, callback) {
      opts = opts || {};
      let postBody = opts['testDTO'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['JWTSecurity'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ApiMessageDTO;
      return this.apiClient.callApi(
        '/evluation/test', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getGrades operation.
     * @callback module:api/EvaluationApi~getGradesCallback
     * @param {String} error Error message, if any.
     * @param {Array.<Number>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get the grades of a student.
     * @param {Number} idStudent 
     * @param {module:api/EvaluationApi~getGradesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<Number>}
     */
    getGrades(idStudent, callback) {
      let postBody = null;
      // verify the required parameter 'idStudent' is set
      if (idStudent === undefined || idStudent === null) {
        throw new Error("Missing the required parameter 'idStudent' when calling getGrades");
      }

      let pathParams = {
        'idStudent': idStudent
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['JWTSecurity'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ['Number'];
      return this.apiClient.callApi(
        '/evaluation/grades/{idStudent}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getStudentTests operation.
     * @callback module:api/EvaluationApi~getStudentTestsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TestDTO} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get the tests of a student for a specific course.
     * @param {Number} idCourse 
     * @param {Number} idStudent 
     * @param {module:api/EvaluationApi~getStudentTestsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TestDTO}
     */
    getStudentTests(idCourse, idStudent, callback) {
      let postBody = null;
      // verify the required parameter 'idCourse' is set
      if (idCourse === undefined || idCourse === null) {
        throw new Error("Missing the required parameter 'idCourse' when calling getStudentTests");
      }
      // verify the required parameter 'idStudent' is set
      if (idStudent === undefined || idStudent === null) {
        throw new Error("Missing the required parameter 'idStudent' when calling getStudentTests");
      }

      let pathParams = {
        'idCourse': idCourse,
        'idStudent': idStudent
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['JWTSecurity'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = TestDTO;
      return this.apiClient.callApi(
        '/evaluation/marks/{idCourse}/student/{idStudent}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the noteStudent operation.
     * @callback module:api/EvaluationApi~noteStudentCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ApiMessageDTO} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Notes a student test.
     * This endpoint is used to set a mark for a student on a specific test.
     * @param {Object} opts Optional parameters
     * @param {module:model/MarkDTO} opts.markDTO 
     * @param {module:api/EvaluationApi~noteStudentCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ApiMessageDTO}
     */
    noteStudent(opts, callback) {
      opts = opts || {};
      let postBody = opts['markDTO'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['JWTSecurity'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ApiMessageDTO;
      return this.apiClient.callApi(
        '/evaluation/mark', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
